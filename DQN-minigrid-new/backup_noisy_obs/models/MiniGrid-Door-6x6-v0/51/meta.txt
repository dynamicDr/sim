Namespace(alg_name='DQN', alpha=0.7, batch_size=128, beta=1.6, beta_decay_step=100000.0, beta_min=0.01, change_env=1, change_factor=-1, change_timestep=50000, change_type='noisy_obs', env_name='MiniGrid-Door-6x6-v0', epsilon_decay_step=150000.0, epsilon_init=1.0, epsilon_min=0.01, full_obs=1, gamma=0.99, lambda_init=0.8, lr=0.0001, max_epi_timestep=-1, max_timestep=300000, model_size='large', noise_amp=1.2, note='noisy_obs_PER_noise_1.2_alpha_0.7', number=51, polyak=0.995, random_seed=666, replay='PER', replay_max_size=50000, restart='', save_rate=10000, train_freq=1)
DQN_large(
  (conv_layer): Sequential(
    (0): Conv2d(3, 64, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=1, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 128, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(128, 256, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc_layer): Sequential(
    (0): Linear(in_features=256, out_features=256, bias=True)
    (1): Tanh()
    (2): Linear(in_features=256, out_features=128, bias=True)
    (3): Tanh()
    (4): Linear(in_features=128, out_features=4, bias=True)
  )
)
